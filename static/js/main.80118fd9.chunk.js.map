{"version":3,"sources":["components/ImageGallery/ImageGallery.module.css","components/Modal/Modal.module.css","components/ImageGalleryItem/ImageGalleryItem.module.css","components/Loader/Loader.module.css","components/Button/Button.module.css","components/Searchbar/Searchbar.jsx","components/Modal/Modal.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/Loader/Loader.jsx","components/Button/Button.jsx","services/imagesApiService.js","components/ImageGallery/ImageGallery.jsx","App.js","reportWebVitals.js","index.js","components/Searchbar/Searchbar.module.css"],"names":["module","exports","Searchbar","state","query","onInputChange","e","setState","currentTarget","value","toLowerCase","onFormSubmit","preventDefault","trim","alert","props","onSubmit","className","styles","SearchForm","this","type","SearchForm_button","SearchForm_button_label","SearchForm_input","autoComplete","autoFocus","placeholder","onChange","name","Component","Modal","handleKeyDown","code","onClose","handleOverlayClick","target","window","addEventListener","removeEventListener","modalImg","Overlay","onClick","src","largeImageURL","alt","tags","ImageGalleryItem","images","map","image","webformatURL","ImageGalleryItem_image","id","Loader","color","height","width","timeout","Button","fetchImages","page","fetch","then","response","ok","json","Promise","reject","Error","ImageGallery","error","status","getImagesAfterNewSearch","a","hits","catch","getImagesFromNextPage","imagesArray","prevState","scrollDown","scrollTo","top","document","documentElement","scrollHeight","behavior","handleLoadMore","prevProps","text_before_search","length","App","showModal","handleFormSubmit","openModal","closeModal","defaultProps","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.80118fd9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__R02je\",\"text_before_search\":\"ImageGallery_text_before_search__1wpKw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__2mLrE\",\"Modal\":\"Modal_Modal__2Afsb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__FCKkB\",\"ImageGalleryItem_image\":\"ImageGalleryItem_ImageGalleryItem_image__RFYs1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__Fk-Ip\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3tsp-\"};","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Searchbar.module.css';\r\n\r\nclass Searchbar extends Component {\r\n    static propTypes = {\r\n        onSubmit: PropTypes.func,\r\n    };\r\n\r\n    state = {\r\n        query: '',\r\n    }\r\n\r\n    onInputChange = (e) => {\r\n        this.setState({\r\n          query: e.currentTarget.value.toLowerCase()\r\n        });\r\n      };\r\n\r\n    onFormSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (this.state.query.trim() === '') {\r\n            return alert('Please enter something');\r\n        }\r\n\r\n        this.props.onSubmit(this.state.query);\r\n        this.setState({ query: '' })\r\n        \r\n\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <header className={styles.Searchbar}>\r\n                <form className={styles.SearchForm} onSubmit={this.onFormSubmit}>\r\n                    <button type=\"submit\" className={styles.SearchForm_button}>\r\n                        <span className={styles.SearchForm_button_label}>\r\n                            Search\r\n                        </span>\r\n                    </button>\r\n\r\n                    <input\r\n                        className={styles.SearchForm_input}\r\n                        type=\"text\"\r\n                        autoComplete=\"off\"\r\n                        autoFocus\r\n                        placeholder=\"Search images and photos\"\r\n                        value={this.state.query}\r\n                        onChange={this.onInputChange}\r\n                        name=\"query\"\r\n                    />\r\n                </form>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport { Searchbar };","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Modal.module.css';\r\n\r\nclass Modal extends Component {\r\n  static propTypes = {\r\n    modalImg: PropTypes.object,\r\n    onClose: PropTypes.func,\r\n  };\r\n\r\n  componentDidMount () {\r\n    window.addEventListener('keydown', this.handleKeyDown)\r\n  }\r\n\r\n  componentWillUnmount () {\r\n    window.removeEventListener('keydown', this.handleKeyDown)\r\n  };\r\n\r\n  handleKeyDown = (e) => {\r\n    if(e.code === 'Escape') {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  handleOverlayClick = (e) => {\r\n    if(e.currentTarget === e.target) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { modalImg } = this.props;\r\n    return (\r\n        <div className={styles.Overlay} onClick={this.handleOverlayClick}>\r\n            <div className={styles.Modal}>\r\n                <img src={modalImg.largeImageURL} alt={modalImg.tags} />\r\n            </div>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport { Modal };","import PropTypes from 'prop-types';\r\nimport styles from './ImageGalleryItem.module.css';\r\n\r\nfunction ImageGalleryItem({images, onClick}) {\r\n    return (\r\n        images.map(image => (\r\n            <li key={image.id} className={styles.ImageGalleryItem}>\r\n                <img onClick={() => onClick(image)} src={image.webformatURL} alt={image.tags} className={styles.ImageGalleryItem_image} />\r\n            </li>\r\n        ))\r\n    )\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n    image: PropTypes.arrayOf(PropTypes.object),\r\n    onClick: PropTypes.func,\r\n};\r\n\r\nexport { ImageGalleryItem };","import React from 'react';\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport LoaderSpinner from \"react-loader-spinner\";\r\nimport styles from './Loader.module.css';\r\n\r\nfunction Loader () {\r\n    return (\r\n        <div className={styles.Loader}>\r\n            <LoaderSpinner\r\n                type=\"Circles\"\r\n                color=\"#3f51b5\"\r\n                height={100}\r\n                width={100}\r\n                timeout={5000}\r\n                margin-left={300} \r\n            />\r\n        </div>\r\n        \r\n    );\r\n} \r\n\r\nexport { Loader };","import PropTypes from 'prop-types';\r\nimport styles from './Button.module.css';\r\n\r\nfunction Button ({ onClick }) {\r\n    return (\r\n        <button \r\n            onClick={onClick}\r\n            className={styles.Button} \r\n            type=\"button\">\r\n                Load more\r\n        </button> \r\n    )\r\n};\r\n\r\nButton.propTypes = {\r\n    onClick: PropTypes.func,\r\n};\r\n\r\nexport { Button };","const URL = 'https://pixabay.com/api/';\r\nconst KEY = '22485348-da19140f48b52c54df68447da';\r\nconst IMAGES_PER_PAGE = 12;\r\n\r\nfunction fetchImages(query, page) {\r\n  return fetch(`${URL}/?q=${query}&page=${page}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=${IMAGES_PER_PAGE}`)\r\n  .then(response => {\r\n    if(response.ok) {\r\n       return response.json()\r\n    }\r\n    return Promise.reject(new Error(`There are no images with ${query}`));\r\n  });\r\n\r\n}\r\n\r\nexport { fetchImages };","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { ImageGalleryItem } from '../ImageGalleryItem/ImageGalleryItem';\r\nimport { Loader } from '../Loader/Loader';\r\nimport { Button } from '../Button/Button';\r\nimport { fetchImages } from '../../services/imagesApiService';\r\nimport styles from './ImageGallery.module.css';\r\n\r\nclass ImageGallery extends Component {\r\n  static propTypes = {\r\n    query: PropTypes.string,\r\n    openModal: PropTypes.func,\r\n  };\r\n\r\n  state = {\r\n    images: [],\r\n    error: null,\r\n    page: 1,\r\n    status: 'idle',\r\n  };\r\n\r\n  async componentDidUpdate(prevProps, prevState) {\r\n      if(prevProps.query !== this.props.query) {\r\n        this.setState({status: 'pending', images: [], page: 1});\r\n        await this.getImagesAfterNewSearch();\r\n      }\r\n      if(prevState.page !== this.state.page && this.state.page > 1) {\r\n        this.setState({status: 'pending-ready'});\r\n        await this.getImagesFromNextPage();\r\n        this.scrollDown();\r\n      }\r\n  };\r\n  \r\n  getImagesAfterNewSearch = async () => {\r\n\r\n    await fetchImages(this.props.query, this.state.page)\r\n      .then(images => {\r\n        this.setState({images: images.hits, status: 'resolved'});\r\n      })\r\n    .catch (error => this.setState({error, status: 'rejected'}))\r\n  };\r\n\r\n  getImagesFromNextPage = async () => {\r\n    \r\n    await fetchImages(this.props.query, this.state.page)\r\n      .then(images => {\r\n        const imagesArray = images.hits;\r\n        this.setState((prevState) => ({images: [...prevState.images, ...imagesArray], status: 'resolved'}));\r\n      })\r\n      .catch (error => this.setState({error, status: 'rejected'}));\r\n  };\r\n\r\n  scrollDown = () => {\r\n    window.scrollTo({\r\n      top: document.documentElement.scrollHeight,\r\n      behavior: 'smooth',\r\n    });\r\n  };\r\n\r\n  handleLoadMore = () => {\r\n      this.setState((prevState) =>{\r\n          return {page: prevState.page + 1}\r\n      })\r\n  };\r\n\r\n  render() {\r\n      const {status, images, error} = this.state;\r\n\r\n      if(status === 'idle') {\r\n        return <p className={styles.text_before_search}>You can find everything you want</p>\r\n      }\r\n\r\n      if(status === 'pending') {\r\n        return <Loader />\r\n      }\r\n\r\n      if(status === 'pending-ready') {\r\n        return (\r\n          <>\r\n            <ul className={styles.ImageGallery}>\r\n                <ImageGalleryItem images={images} onClick={this.props.onClick}/>\r\n            </ul>\r\n            <Loader />\r\n          </>\r\n        )\r\n      }\r\n\r\n      if(status === 'rejected') {\r\n        return error;\r\n      }\r\n\r\n      if(status === 'resolved') {\r\n        return (\r\n          <>\r\n            <ul className={styles.ImageGallery}>\r\n              <ImageGalleryItem images={images} onClick={this.props.onClick}/>\r\n            </ul>\r\n\r\n            {images.length > 0 \r\n              ? <Button onClick={this.handleLoadMore} /> \r\n              : <p>Try to find something else</p>}\r\n          </>\r\n        )\r\n      }\r\n\r\n  }\r\n};\r\n\r\nexport { ImageGallery };","import React, { Component } from 'react';\nimport { Searchbar } from './components/Searchbar/Searchbar';\nimport { Modal } from './components/Modal/Modal';\nimport { ImageGallery } from './components/ImageGallery/ImageGallery';\nimport './App.css';\n\nclass App extends Component {\n  static defaultProps = {};\n\n  static propTypes = {};\n\n  state = {\n    query: '',\n    showModal: false,\n    modalImg: '',\n  };\n\n  handleFormSubmit = (query) => {\n    this.setState({query});\n  };\n\n  openModal = (modalImg) => {\n    this.setState({\n      showModal: true,\n      modalImg,\n    })\n  } \n\n  closeModal = () => {\n    this.setState({showModal: false})\n  };\n  render() {\n    return (\n      <div className=\"App\">\n        <Searchbar onSubmit={this.handleFormSubmit} />\n        <ImageGallery query={this.state.query} onClick={this.openModal}/>\n        {this.state.showModal && <Modal modalImg={this.state.modalImg} onClose={this.closeModal}/>}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__v6Nzd\",\"SearchForm\":\"Searchbar_SearchForm__1YVFE\",\"SearchForm_button\":\"Searchbar_SearchForm_button__36oGg\",\"SearchForm_button_label\":\"Searchbar_SearchForm_button_label__1AxDt\",\"SearchForm_input\":\"Searchbar_SearchForm_input__3vSdZ\"};"],"sourceRoot":""}